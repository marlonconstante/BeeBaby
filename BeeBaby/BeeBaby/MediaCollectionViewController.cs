// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using BeBabby.ResourcesProviders;
using System.Collections.Generic;

namespace BeBabby
{
	public partial class MediaCollectionViewController : UICollectionViewController
	{
		UIImagePickerController m_picker;
		IList<UIImage> m_images;
		static NSString s_cellId = new NSString ("GalleryCell");

		public MediaCollectionViewController (IntPtr handle) : base (handle)
		{
		}

		/// <summary>
		/// Buttons the add media from library.
		/// </summary>
		/// <param name="sender">Sender.</param>
		partial void btnAddMediaFromLibrary(MonoTouch.UIKit.UIBarButtonItem sender)
		{
			var imagePickerProvider = new MediaPickerProvider(UIImagePickerControllerSourceType.SavedPhotosAlbum);
			m_picker = imagePickerProvider.GetUIImagePickerController();

			PresentViewController(m_picker, false, null);
		}

		partial void btnNextStep(MonoTouch.UIKit.UIBarButtonItem sender)
		{
			PerformSegue("segueEventStep", sender);
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			CollectionView.RegisterClassForCell (typeof(CollectionViewCell), s_cellId);

		}

		public override void ViewWillAppear(bool animated)
		{
			var documentsDirectory = Environment.GetFolderPath(Environment.SpecialFolder.Personal);
			var filesList = System.IO.Directory.GetFiles(documentsDirectory, "*.jpg");

			m_images = new List<UIImage>();

			foreach (var item in filesList) {
				var data = NSData.FromFile(System.IO.Path.Combine(documentsDirectory, item));
				m_images.Add(UIImage.LoadFromData(data));
			}
				
			this.CollectionView.ReloadData();

			base.ViewWillAppear(animated);
		}

		public override int NumberOfSections (UICollectionView collectionView)
		{
			return 1;
		}

		public override int GetItemsCount (UICollectionView collectionView, int section)
		{
			return m_images.Count;
		}

		public override UICollectionViewCell GetCell (UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath)
		{
			CollectionViewCell cell = (CollectionViewCell)collectionView.DequeueReusableCell (s_cellId, indexPath);

			if (cell == null) {
				cell = new CollectionViewCell (base.Handle);
			}

			cell.BackgroundColor = UIColor.White;
			cell.Image = m_images[indexPath.Item];

			return cell;
		}
	}
}
