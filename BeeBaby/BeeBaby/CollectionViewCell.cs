// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Drawing;
using MonoTouch.CoreGraphics;

namespace BeBabby
{
	public partial class CollectionViewCell : UICollectionViewCell
	{
		public UIImage Image
		{
			get
			{ 
				return this.p_imageView.Image; 
			}
			set
			{
				p_imageView = new UIImageView (MaxResizeImage(value, 130, 130));
				p_imageView.ContentMode = UIViewContentMode.ScaleAspectFit;
				ContentView.AddSubview(p_imageView);
			}
		}

		public CollectionViewCell(IntPtr handle) : base(handle)
		{
		}
			
		/// <summary>
		/// Resize the image to be contained within a maximum width and height, keeping aspect ratio
		/// </summary>
		/// <returns>The resize image.</returns>
		/// <param name="sourceImage">Source image.</param>
		/// <param name="maxWidth">Max width.</param>
		/// <param name="maxHeight">Max height.</param>
		public UIImage MaxResizeImage(UIImage sourceImage, float maxWidth, float maxHeight)
		{
//			var sourceSize = sourceImage.Size;
//			var maxResizeFactor = Math.Min(maxWidth / sourceSize.Width, maxHeight / sourceSize.Height);
//			if (maxResizeFactor > 1) return sourceImage;
//			var width = maxResizeFactor * sourceSize.Width;
//			var height = maxResizeFactor * sourceSize.Height;

			var width = 140;
			var height = 140;

			UIGraphics.BeginImageContext(new SizeF(width, height));
			sourceImage.Draw(new RectangleF(0, 0, width, height));
			var resultImage = UIGraphics.GetImageFromCurrentImageContext();
			UIGraphics.EndImageContext();
			return resultImage;
		}
	}
}
